{
	"id": "d1647294-851e-5813-da8e-a63b0de39805",
	"name": "GCP",
	"description": "",
	"order": [
		"18528800-ed77-4eb3-3f59-632da1c90230",
		"309a94d7-7dd8-e8d2-323e-3efe1e058006",
		"818fbbff-a879-99c9-68d0-d2c856bec00b"
	],
	"folders": [],
	"folders_order": [],
	"timestamp": 1518523323286,
	"owner": "2422565",
	"public": false,
	"requests": [
		{
			"id": "18528800-ed77-4eb3-3f59-632da1c90230",
			"headers": "cb-user-provider-account: dd251119-dac1-4b05-8fbb-81c98b2ce5b4\napikey: e39894b0-8885-5691-85e7-2fddcde63135\nusername: johnhorn@us.ibm.com\nContent-Type: application/json\n",
			"headerData": [
				{
					"key": "cb-user-provider-account",
					"value": "dd251119-dac1-4b05-8fbb-81c98b2ce5b4",
					"description": "",
					"enabled": true
				},
				{
					"key": "apikey",
					"value": "e39894b0-8885-5691-85e7-2fddcde63135",
					"description": "",
					"enabled": true
				},
				{
					"key": "username",
					"value": "johnhorn@us.ibm.com",
					"description": "",
					"enabled": true
				},
				{
					"key": "Content-Type",
					"value": "application/json",
					"description": "",
					"enabled": true
				}
			],
			"url": "https://cb-qa-2-api.gravitant.net/core/configuration/v1/configvalues/SNOW/decrypted",
			"queryParams": [],
			"pathVariables": {},
			"pathVariableData": [],
			"preRequestScript": null,
			"method": "GET",
			"collectionId": "d1647294-851e-5813-da8e-a63b0de39805",
			"data": [],
			"dataMode": "raw",
			"name": "Get creds from core config-SNOW",
			"description": "",
			"descriptionFormat": "html",
			"time": 1518523349876,
			"version": 2,
			"responses": [],
			"tests": null,
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\"serviceId\": \"CB_AWS_CF_RDS_S00\",\"refId\": \"CB_AWS_CF_RDS\",\"description\":\n\t\"\"}"
		},
		{
			"id": "309a94d7-7dd8-e8d2-323e-3efe1e058006",
			"headers": "//cb-user-provider-account: dd251119-dac1-4b05-8fbb-81c98b2ce5b4\napikey: 7d1ad6ae-4f29-5558-9891-4411b2bbefd5\nusername: htiwari1@in.ibm.com\nContent-Type: application/json\n",
			"headerData": [
				{
					"key": "cb-user-provider-account",
					"value": "dd251119-dac1-4b05-8fbb-81c98b2ce5b4",
					"description": "",
					"enabled": false
				},
				{
					"key": "apikey",
					"value": "7d1ad6ae-4f29-5558-9891-4411b2bbefd5",
					"description": "",
					"enabled": true
				},
				{
					"key": "username",
					"value": "htiwari1@in.ibm.com",
					"description": "",
					"enabled": true
				},
				{
					"key": "Content-Type",
					"value": "application/json",
					"description": "",
					"enabled": true
				}
			],
			"url": "http://myminikube.info:30075/core/configuration/v1/configvalues/GCP/decrypted",
			"queryParams": [],
			"preRequestScript": null,
			"pathVariables": {},
			"pathVariableData": [],
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": null,
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1518523772130,
			"name": "Local-Get creds from core config-GCP",
			"description": "",
			"collectionId": "d1647294-851e-5813-da8e-a63b0de39805",
			"responses": [],
			"rawModeData": "{\"serviceId\": \"CB_AWS_CF_RDS_S00\",\"refId\": \"CB_AWS_CF_RDS\",\"description\":\n\t\"\"}"
		},
		{
			"id": "818fbbff-a879-99c9-68d0-d2c856bec00b",
			"headers": "//cb-user-provider-account: dd251119-dac1-4b05-8fbb-81c98b2ce5b4\napikey: 7d1ad6ae-4f29-5558-9891-4411b2bbefd5\nusername: htiwari1@in.ibm.com\nContent-Type: application/json\n",
			"headerData": [
				{
					"key": "cb-user-provider-account",
					"value": "dd251119-dac1-4b05-8fbb-81c98b2ce5b4",
					"description": "",
					"enabled": false
				},
				{
					"key": "apikey",
					"value": "7d1ad6ae-4f29-5558-9891-4411b2bbefd5",
					"description": "",
					"enabled": true
				},
				{
					"key": "username",
					"value": "htiwari1@in.ibm.com",
					"description": "",
					"enabled": true
				},
				{
					"key": "Content-Type",
					"value": "application/json",
					"description": "",
					"enabled": true
				}
			],
			"url": "http://myminikube.info:30075/core/configuration/v1/configvalues",
			"queryParams": [],
			"pathVariables": {},
			"pathVariableData": [],
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "d1647294-851e-5813-da8e-a63b0de39805",
			"data": [],
			"dataMode": "raw",
			"name": "Local-POST creds from core config-GCP",
			"description": "",
			"descriptionFormat": "html",
			"time": 1518523732393,
			"version": 2,
			"responses": [],
			"tests": null,
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\n\n  \"configurationkey\":\"GCP\",\n  \"configurationvalue\":{\n      \"_gcp_host\":\"test\",\n      \"_gcp_path\":\"/api/now/table/sc_request\",\n      \"_gcp_user\":\"admin\",\n      \"_gcp_password\":\"gcppw\"\n  }\n}"
		}
	]
}